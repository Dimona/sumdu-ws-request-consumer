service: sumdu-ws-request-consumer

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  stage: prod
  runtime: nodejs16.x
  region: eu-central-1
  architecture: arm64
  timeout: 30
  memorySize: 1024
  deploymentMethod: direct
  versionFunctions: false
  iam:
    role:
      name: ${self:service}-${self:provider.stage}
      path: /lambda-${self:provider.stage}/
      statements:
        - Effect: Allow
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:WS_WEATHER_REQUESTS_DYNAMODB_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:WS_WEATHER_REQUESTS_DYNAMODB_TABLE}/index/*
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:GetItem
        - Effect: Allow
          Resource:
            - arn:aws:ses:${aws:region}:${aws:accountId}:identity/*
            - arn:aws:ses:${aws:region}:${aws:accountId}:template/weather-request-template
          Action:
            - ses:SendEmail
            - ses:SendTemplatedEmail
            - ses:SendRawEmail
      tags:
        app: sumdu-workshop
        env: ${self:provider.stage}
  environment:
    ENVIRONMENT: ${self:provider.stage}
    WS_WEATHER_REQUESTS_DYNAMODB_TABLE: ${env:WS_WEATHER_REQUESTS_DYNAMODB_TABLE}
    WS_WEATHER_REQUESTS_QUEUE: ${env:WS_WEATHER_REQUESTS_QUEUE}
    METEOMATICS_USER: ${env:METEOMATICS_USER}
    METEOMATICS_PASSWORD: ${env:METEOMATICS_PASSWORD}
    SES_SOURCE_EMAIL: ${env:SES_SOURCE_EMAIL}
    WEATHER_REQUEST_TEMPLATE: ${env:WEATHER_REQUEST_TEMPLATE}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

plugins:
  - serverless-offline
  - serverless-webpack

functions:
  sqs-consumer:
    handler: src/index.handler
    events:
      - sqs: arn:aws:sqs:${aws:region}:${aws:accountId}:${env:WS_WEATHER_REQUESTS_QUEUE}

custom:
  webpack:
    webpackConfig: webpack.config.js # Name of webpack configuration file
    includeModules: true # Node modules configuration for packaging
    packager: npm # Packager that will be used to package your external modules
